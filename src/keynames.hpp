const int VoidSymbol = 0xFFFFFF; // Does nothing
const int BackSpace = 0xFF08; // Erase the previous character, unlike loadkeys,
                              // Delete does not do the same thing
const int Tab = 0xFF09;
const int Linefeed = 0xFF0A; // Linefeed, LF
const int Clear = 0xFF0B;
const int Return = 0xFF0D; // Return, enter
const int Pause = 0xFF13;  // Pause, hold
const int Scroll_Lock = 0xFF14;
const int Sys_Req = 0xFF15;
const int Escape = 0xFF1B;
const int Delete = 0xFFFF; // Erase the character under the cursor. This is the
                           // same as Rubout in loadkeys.
const int Multi_key = 0xFF20; // Allows odd characters to be entered, in the
                              // same way as Compose in loadkeys
const int Codeinput = 0xFF37; // Kanji_Bangou is a synonym
const int SingleCandidate = 0xFF3C;
const int MultipleCandidate = 0xFF3D; // Zen_Koho is a synonym
const int PreviousCandidate = 0xFF3E; // Mae_Koho is a synonym
const int Kanji = 0xFF21;             // Kanji, Kanji convert
const int Muhenkan = 0xFF22;          // Cancel Conversion
const int Henkan_Mode = 0xFF23; // Start/Stop Conversion; Henkan is a synonym
const int Romaji = 0xFF24;      // to Romaji
const int Hiragana = 0xFF25;    // to Hiragana
const int Katakana = 0xFF26;    // to Katakana
const int Hiragana_Katakana = 0xFF27; // Hiragana/Katakana toggle
const int Zenkaku = 0xFF28;           // to Zenkaku
const int Hankaku = 0xFF29;           // to Hankaku
const int Zenkaku_Hankaku = 0xFF2A;   // Zenkaku/Hankaku toggle
const int Touroku = 0xFF2B;           // Add to Dictionary
const int Massyo = 0xFF2C;            // Delete from Dictionary
const int Kana_Lock = 0xFF2D;         // Kana Lock
const int Kana_Shift = 0xFF2E;        // Kana Shift
const int Eisu_Shift = 0xFF2F;        // Alphanumeric Shift
const int Eisu_toggle = 0xFF30;       // Alphanumeric toggle
const int Home = 0xFF50;
const int Left = 0xFF51;   // Move left, left arrow
const int Up = 0xFF52;     // Move up, up arrow
const int Right = 0xFF53;  // Move right, right arrow
const int Down = 0xFF54;   // Move down, down arrow
const int Prior = 0xFF55;  // Prior, previous; Page_Up is a synonym
const int Next = 0xFF56;   // Next; Page_Down is a synonym
const int End = 0xFF57;    // EOL
const int Begin = 0xFF58;  // BOL
const int Select = 0xFF60; // Select, mark
const int Print = 0xFF61;
const int Execute = 0xFF62; // Execute, run, do
const int Insert = 0xFF63;  // Insert, insert here
const int Undo = 0xFF65;    // Undo, oops
const int Redo = 0xFF66;    // redo, again
const int Menu = 0xFF67;
const int Find = 0xFF68;   // Find, search
const int Cancel = 0xFF69; // Cancel, stop, abort, exit
const int Help = 0xFF6A;   // Help
const int Break = 0xFF6B;
const int Mode_switch
    = 0xFF7E; // Shiftlevel two, giving access to the third and fourth columns
              // of keysyms; script-, Greek-, Arabic-, kana-, Hangul- and
              // Hebrew- _switch are synonyms
const int Num_Lock = 0xFF7F;
const int KP_Space = 0xFF80; // space
const int KP_Tab = 0xFF89;
const int KP_Enter = 0xFF8D; // enter
const int KP_F1 = 0xFF91;    // PF1, KP_A, ...
const int KP_F2 = 0xFF92;
const int KP_F3 = 0xFF93;
const int KP_F4 = 0xFF94;
const int KP_Home = 0xFF95;
const int KP_Left = 0xFF96;
const int KP_Up = 0xFF97;
const int KP_Right = 0xFF98;
const int KP_Down = 0xFF99;
const int KP_Prior = 0xFF9A; // KP_Page_Up is a synonym
const int KP_Next = 0xFF9B;  // KP_Page_Down is a synonym
const int KP_End = 0xFF9C;
const int KP_Begin = 0xFF9D;
const int KP_Insert = 0xFF9E;
const int KP_Delete = 0xFF9F;
const int KP_Equal = 0xFFBD; // equals
const int KP_Multiply = 0xFFAA;
const int KP_Add = 0xFFAB;
const int KP_Separator = 0xFFAC; // separator, often comma
const int KP_Subtract = 0xFFAD;
const int KP_Decimal = 0xFFAE;
const int KP_Divide = 0xFFAF;
const int KP_0 = 0xFFB0; // or 0xFFB9 FIXME
const int F1 = 0xffbe;
const int F2 = 0xffbf;
const int F3 = 0xffc0;
const int F4 = 0xffc1;
const int F5 = 0xffc2;
const int F6 = 0xffc3;
const int F7 = 0xffc4;
const int F8 = 0xffc5;
const int F9 = 0xffc6;
const int F10 = 0xffc7;
const int F11 = 0xffc8;
const int F12 = 0xffc9;
const int F13 = 0xffca;
const int F14 = 0xffcb;
const int F15 = 0xffcc;
const int F16 = 0xffcd;
const int F17 = 0xffce;
const int F18 = 0xffcf;
const int F19 = 0xffd0;
const int F20 = 0xffd1;
const int F21 = 0xffd2;
const int F22 = 0xffd3;
const int F23 = 0xffd4;
const int F24 = 0xffd5;
const int F25 = 0xffd6;
const int F26 = 0xffd7;
const int F27 = 0xffd8;
const int F28 = 0xffd9;
const int F29 = 0xffda;
const int F30 = 0xffdb;
const int F31 = 0xffdc;
const int F32 = 0xffdd;
const int F33 = 0xffde;
const int F34 = 0xffdf;
const int F35 = 0xffe0;
const int Shift_L = 0xFFE1;    // Left shift
const int Shift_R = 0xFFE2;    // Right shift
const int Control_L = 0xFFE3;  // Left control
const int Control_R = 0xFFE4;  // Right control
const int Caps_Lock = 0xFFE5;  // Caps lock
const int Shift_Lock = 0xFFE6; // Shift lock
const int Meta_L = 0xFFE7;     // Left meta
const int Meta_R = 0xFFE8;     // Right meta
const int Alt_L = 0xFFE9;      // Left alt
const int Alt_R = 0xFFEA;      // Right alt
const int Super_L = 0xFFEB;    // Left super
const int Super_R = 0xFFEC;    // Right super
const int Hyper_L = 0xFFED;    // Left hyper
const int Hyper_R = 0xFFEE;    // Right hyper
const int dead_hook = 0xFE61;
const int dead_horn = 0xFE62;
const int _Duplicate = 0xFD01; // 3270 begins here
const int _FieldMark = 0xFD02;
const int _Right2 = 0xFD03;
const int _Left2 = 0xFD04;
const int _BackTab = 0xFD05;
const int _EraseEOF = 0xFD06;
const int _EraseInput = 0xFD07;
const int _Reset = 0xFD08;
const int _Quit = 0xFD09;
const int _PA1 = 0xFD0A;
const int _PA2 = 0xFD0B;
const int _PA3 = 0xFD0C;
const int _Test = 0xFD0D;
const int _Attn = 0xFD0E;
const int _CursorBlink = 0xFD0F;
const int _AltCursor = 0xFD10;
const int _KeyClick = 0xFD11;
const int _Jump = 0xFD12;
const int _Ident = 0xFD13;
const int _Rule = 0xFD14;
const int _Copy = 0xFD15;
const int _Play = 0xFD16;
const int _Setup = 0xFD17;
const int _Record = 0xFD18;
const int _ChangeScreen = 0xFD19;
const int _DeleteWord = 0xFD1A;
const int _ExSelect = 0xFD1B;
const int _CursorSelect = 0xFD1C;
const int _PrintScreen = 0xFD1D;
const int _Enter = 0xFD1E; // 3270 ends here
const int space = 0x020;
const int exclam = 0x021;     //!
const int quotedbl = 0x022;   //"
const int numbersign = 0x023; //#
const int dollar = 0x024;     //$
const int percent = 0x025;    //%
const int ampersand = 0x026;  //&
const int apostrophe = 0x027; //'; quoteright is a deprecated synonym
const int parenleft = 0x028;  //(
const int parenright = 0x029; //)
const int asterisk = 0x02a;   //*
const int plus = 0x02b;       //+
const int comma = 0x02c;      //,
const int minus = 0x02d;      //-
const int period = 0x02e;     //.
const int slash = 0x02f;      ///
const int _0 = 0x30;
const int _1 = 0x31;
const int _2 = 0x32;
const int _3 = 0x33;
const int _4 = 0x34;
const int _5 = 0x35;
const int _6 = 0x36;
const int _7 = 0x37;
const int _8 = 0x38;
const int _9 = 0x39;
const int colon = 0x03a;     //:
const int semicolon = 0x03b; //;
const int less = 0x03c;      //<
const int equal = 0x03d;     //=
const int greater = 0x03e;   //>
const int question = 0x03f;  //?
const int at = 0x040;        //@
const int latin_A = 0x41;
const int latin_B = 0x42;
const int latin_C = 0x43;
const int latin_D = 0x44;
const int latin_E = 0x45;
const int latin_F = 0x46;
const int latin_G = 0x47;
const int latin_H = 0x48;
const int latin_I = 0x49;
const int latin_J = 0x4a;
const int latin_K = 0x4b;
const int latin_L = 0x4c;
const int latin_M = 0x4d;
const int latin_N = 0x4e;
const int latin_O = 0x4f;
const int latin_P = 0x50;
const int latin_Q = 0x51;
const int latin_R = 0x52;
const int latin_S = 0x53;
const int latin_T = 0x54;
const int latin_U = 0x55;
const int latin_V = 0x56;
const int latin_W = 0x57;
const int latin_X = 0x58;
const int latin_Y = 0x59;
const int latin_Z = 0x5a;
const int bracketleft = 0x05b; //[
const int backslash = 0x05c;
const int bracketright = 0x05d; //]
const int asciicircum = 0x05e;  //^
const int underscore = 0x05f;   //_
const int grave = 0x060;        //`; quoteleft is a deprecated synonym
const int latin_a = 0x61;
const int latin_b = 0x62;
const int latin_c = 0x63;
const int latin_d = 0x64;
const int latin_e = 0x65;
const int latin_f = 0x66;
const int latin_g = 0x67;
const int latin_h = 0x68;
const int latin_i = 0x69;
const int latin_j = 0x6a;
const int latin_k = 0x6b;
const int latin_l = 0x6c;
const int latin_m = 0x6d;
const int latin_n = 0x6e;
const int latin_o = 0x6f;
const int latin_p = 0x70;
const int latin_q = 0x71;
const int latin_r = 0x72;
const int latin_s = 0x73;
const int latin_t = 0x74;
const int latin_u = 0x75;
const int latin_v = 0x76;
const int latin_w = 0x77;
const int latin_x = 0x78;
const int latin_y = 0x79;
const int latin_z = 0x7a;
const int braceleft = 0x07b;  //{
const int bar = 0x07c;        //|
const int braceright = 0x07d; //}
const int asciitilde = 0x07e; //~
const int nobreakspace = 0x0a0;
const int exclamdown = 0x0a1;    //¡
const int cent = 0x0a2;          //¢
const int sterling = 0x0a3;      //£
const int currency = 0x0a4;      //¤
const int yen = 0x0a5;           //¥
const int brokenbar = 0x0a6;     //¦
const int section = 0x0a7;       //§
const int diaeresis = 0x0a8;     //¨
const int copyright = 0x0a9;     //©
const int ordfeminine = 0x0aa;   //ª
const int guillemotleft = 0x0ab; //«
const int notsign = 0x0ac;       //¬
const int hyphen = 0x0ad;
const int registered = 0x0ae;     //®
const int macron = 0x0af;         //¯
const int degree = 0x0b0;         //°
const int plusminus = 0x0b1;      //±
const int twosuperior = 0x0b2;    //²
const int threesuperior = 0x0b3;  //³
const int acute = 0x0b4;          //´
const int mu = 0x0b5;             //µ
const int paragraph = 0x0b6;      //¶
const int periodcentered = 0x0b7; //·
const int cedilla = 0x0b8;        //¸
const int onesuperior = 0x0b9;    //¹
const int masculine = 0x0ba;      //º
const int guillemotright = 0x0bb; //»
const int onequarter = 0x0bc;     //¼
const int onehalf = 0x0bd;        //½
const int threequarters = 0x0be;  //¾
const int questiondown = 0x0bf;   //¿
const int Agrave = 0x0c0;         //À
const int Aacute = 0x0c1;         //Á
const int Acircumflex = 0x0c2;    //Â
const int Atilde = 0x0c3;         //Ã
const int Adiaeresis = 0x0c4;     //Ä
const int Aring = 0x0c5;          //Å
const int AE = 0x0c6;             //Æ
const int Ccedilla = 0x0c7;       //Ç
const int Egrave = 0x0c8;         //È
const int Eacute = 0x0c9;         //É
const int Ecircumflex = 0x0ca;    //Ê
const int Ediaeresis = 0x0cb;     //Ë
const int Igrave = 0x0cc;         //Ì
const int Iacute = 0x0cd;         //Í
const int Icircumflex = 0x0ce;    //Î
const int Idiaeresis = 0x0cf;     //Ï
const int ETH = 0x0d0;            //Ð; Eth is a deprecated synonym
const int Ntilde = 0x0d1;         //Ñ
const int Ograve = 0x0d2;         //Ò
const int Oacute = 0x0d3;         //Ó
const int Ocircumflex = 0x0d4;    //Ô
const int Otilde = 0x0d5;         //Õ
const int Odiaeresis = 0x0d6;     //Ö
const int multiply = 0x0d7;       //×
const int Ooblique = 0x0d8;       //Ø; Oslash is a synonym
const int Ugrave = 0x0d9;         //Ù
const int Uacute = 0x0da;         //Ú
const int Ucircumflex = 0x0db;    //Û
const int Udiaeresis = 0x0dc;     //Ü
const int Yacute = 0x0dd;         //Ý
const int THORN = 0x0de;          //Þ; Thorn is a deprecated synonym
const int ssharp = 0x0df;         //ß
const int agrave = 0x0e0;         //à
const int aacute = 0x0e1;         //á
const int acircumflex = 0x0e2;    //â
const int atilde = 0x0e3;         //ã
const int adiaeresis = 0x0e4;     //ä
const int aring = 0x0e5;          //å
const int ae = 0x0e6;             //æ
const int ccedilla = 0x0e7;       //ç
const int egrave = 0x0e8;         //è
const int eacute = 0x0e9;         //é
const int ecircumflex = 0x0ea;    //ê
const int ediaeresis = 0x0eb;     //ë
const int igrave = 0x0ec;         //ì
const int iacute = 0x0ed;         //í
const int icircumflex = 0x0ee;    //î
const int idiaeresis = 0x0ef;     //ï
const int eth = 0x0f0;            //ð
const int ntilde = 0x0f1;         //ñ
const int ograve = 0x0f2;         //ò
const int oacute = 0x0f3;         //ó
const int ocircumflex = 0x0f4;    //ô
const int otilde = 0x0f5;         //õ
const int odiaeresis = 0x0f6;     //ö
const int division = 0x0f7;       //÷
const int oslash = 0x0f8;         //ø; ooblique is a synonym
const int ugrave = 0x0f9;         //ù
const int uacute = 0x0fa;         //ú
const int ucircumflex = 0x0fb;    //û
const int udiaeresis = 0x0fc;     //ü
const int yacute = 0x0fd;         //ý
const int thorn = 0x0fe;          //þ
const int ydiaeresis = 0x0ff;     //ÿ
const int Aogonek = 0x1a1;
const int breve = 0x1a2;
const int Lstroke = 0x1a3;
const int Lcaron = 0x1a5;
const int Sacute = 0x1a6; //Ś
const int Scaron = 0x1a9;
const int Scedilla = 0x1aa; //Ş
const int Tcaron = 0x1ab;
const int Zacute = 0x1ac; //Ź
const int Zcaron = 0x1ae;
const int Zabovedot = 0x1af;
const int aogonek = 0x1b1;
const int ogonek = 0x1b2;
const int lstroke = 0x1b3;
const int lcaron = 0x1b5;
const int sacute = 0x1b6; //ś
const int caron = 0x1b7;
const int scaron = 0x1b9;
const int scedilla = 0x1ba; //ş
const int tcaron = 0x1bb;
const int zacute = 0x1bc; //ź
const int doubleacute = 0x1bd;
const int zcaron = 0x1be;
const int zabovedot = 0x1bf;
const int Racute = 0x1c0; //Ŕ
const int Abreve = 0x1c3;
const int Lacute = 0x1c5; //Ĺ
const int Cacute = 0x1c6; //Ć
const int Ccaron = 0x1c8;
const int Eogonek = 0x1ca;
const int Ecaron = 0x1cc;
const int Dcaron = 0x1cf;
const int Dstroke = 0x1d0;
const int Nacute = 0x1d1; //Ń
const int Ncaron = 0x1d2;
const int Odoubleacute = 0x1d5;
const int Rcaron = 0x1d8;
const int Uring = 0x1d9;
const int Udoubleacute = 0x1db;
const int Tcedilla = 0x1de;
const int racute = 0x1e0; //ŕ
const int abreve = 0x1e3;
const int lacute = 0x1e5; //ĺ
const int cacute = 0x1e6; //ć
const int ccaron = 0x1e8;
const int eogonek = 0x1ea;
const int ecaron = 0x1ec;
const int dcaron = 0x1ef;
const int dstroke = 0x1f0;
const int nacute = 0x1f1; //ń
const int ncaron = 0x1f2;
const int odoubleacute = 0x1f5;
const int udoubleacute = 0x1fb;
const int rcaron = 0x1f8;
const int uring = 0x1f9;
const int tcedilla = 0x1fe;
const int abovedot = 0x1ff;
const int Hstroke = 0x2a1;
const int Hcircumflex = 0x2a6;
const int Iabovedot = 0x2a9;
const int Gbreve = 0x2ab;
const int Jcircumflex = 0x2ac;
const int hstroke = 0x2b1;
const int hcircumflex = 0x2b6;
const int idotless = 0x2b9;
const int gbreve = 0x2bb;
const int jcircumflex = 0x2bc;
const int Cabovedot = 0x2c5;
const int Ccircumflex = 0x2c6;
const int Gabovedot = 0x2d5;
const int Gcircumflex = 0x2d8;
const int Ubreve = 0x2dd;
const int Scircumflex = 0x2de;
const int cabovedot = 0x2e5;
const int ccircumflex = 0x2e6;
const int gabovedot = 0x2f5;
const int gcircumflex = 0x2f8;
const int ubreve = 0x2fd;
const int scircumflex = 0x2fe;
const int kra = 0x3a2;      // kappa is a deprecated synonym
const int Rcedilla = 0x3a3; //Ŗ
const int Itilde = 0x3a5;   //Ĩ
const int Lcedilla = 0x3a6; //Ļ
const int Emacron = 0x3aa;
const int Gcedilla = 0x3ab; //Ģ
const int Tslash = 0x3ac;
const int rcedilla = 0x3b3; //ŗ
const int itilde = 0x3b5;   //ĩ
const int lcedilla = 0x3b6; //ļ
const int emacron = 0x3ba;
const int gcedilla = 0x3bb;
const int tslash = 0x3bc;
const int ENG = 0x3bd;
const int eng = 0x3bf;
const int Amacron = 0x3c0;
const int Iogonek = 0x3c7;
const int Eabovedot = 0x3cc;
const int Imacron = 0x3cf;
const int Ncedilla = 0x3d1; //Ņ
const int Omacron = 0x3d2;
const int Kcedilla = 0x3d3; //Ķ
const int Uogonek = 0x3d9;
const int Utilde = 0x3dd; //Ũ
const int Umacron = 0x3de;
const int amacron = 0x3e0;
const int iogonek = 0x3e7;
const int eabovedot = 0x3ec;
const int imacron = 0x3ef;
const int ncedilla = 0x3f1; //ņ
const int omacron = 0x3f2;
const int kcedilla = 0x3f3; //ķ
const int uogonek = 0x3f9;
const int utilde = 0x3fd; //ũ
const int umacron = 0x3fe;
const int Babovedot = 0x12a1;
const int babovedot = 0x12a2;
const int Dabovedot = 0x12a6;
const int Wgrave = 0x12a8;
const int Wacute = 0x12aa;
const int dabovedot = 0x12ab;
const int Ygrave = 0x12ac;
const int Fabovedot = 0x12b0;
const int fabovedot = 0x12b1;
const int Mabovedot = 0x12b4;
const int mabovedot = 0x12b5;
const int Pabovedot = 0x12b7;
const int wgrave = 0x12b8;
const int pabovedot = 0x12b9;
const int wacute = 0x12ba;
const int Sabovedot = 0x12bb;
const int ygrave = 0x12bc;
const int Wdiaeresis = 0x12bd;
const int wdiaeresis = 0x12be;
const int sabovedot = 0x12bf;
const int Wcircumflex = 0x12d0;
const int Tabovedot = 0x12d7;
const int Ycircumflex = 0x12de;
const int wcircumflex = 0x12f0;
const int tabovedot = 0x12f7;
const int ycircumflex = 0x12fe;
const int OE = 0x13bc;
const int oe = 0x13bd;
const int Ydiaeresis = 0x13be; //Ÿ
const int overline = 0x47e;
const int kana_fullstop = 0x4a1;
const int kana_openingbracket = 0x4a2;
const int kana_closingbracket = 0x4a3;
const int kana_comma = 0x4a4;
const int kana_conjunctive = 0x4a5; // kana_middledot is a deprecated synonym
const int kana_WO = 0x4a6;
const int kana_a = 0x4a7;
const int kana_i = 0x4a8;
const int kana_u = 0x4a9;
const int kana_e = 0x4aa;
const int kana_o = 0x4ab;
const int kana_ya = 0x4ac;
const int kana_yu = 0x4ad;
const int kana_yo = 0x4ae;
const int kana_tsu = 0x4af; // kana_tu is a deprecated synonym
const int prolongedsound = 0x4b0;
const int kana_A = 0x4b1;
const int kana_I = 0x4b2;
const int kana_U = 0x4b3;
const int kana_E = 0x4b4;
const int kana_O = 0x4b5;
const int kana_KA = 0x4b6;
const int kana_KI = 0x4b7;
const int kana_KU = 0x4b8;
const int kana_KE = 0x4b9;
const int kana_KO = 0x4ba;
const int kana_SA = 0x4bb;
const int kana_SHI = 0x4bc;
const int kana_SU = 0x4bd;
const int kana_SE = 0x4be;
const int kana_SO = 0x4bf;
const int kana_TA = 0x4c0;
const int kana_CHI = 0x4c1; // kana_TI is a deprecated synonym
const int kana_TSU = 0x4c2; // kana_TU is a deprecated synonym
const int kana_TE = 0x4c3;
const int kana_TO = 0x4c4;
const int kana_NA = 0x4c5;
const int kana_NI = 0x4c6;
const int kana_NU = 0x4c7;
const int kana_NE = 0x4c8;
const int kana_NO = 0x4c9;
const int kana_HA = 0x4ca;
const int kana_HI = 0x4cb;
const int kana_FU = 0x4cc; // kana_HU is a deprecated synonym
const int kana_HE = 0x4cd;
const int kana_HO = 0x4ce;
const int kana_MA = 0x4cf;
const int kana_MI = 0x4d0;
const int kana_MU = 0x4d1;
const int kana_ME = 0x4d2;
const int kana_MO = 0x4d3;
const int kana_YA = 0x4d4;
const int kana_YU = 0x4d5;
const int kana_YO = 0x4d6;
const int kana_RA = 0x4d7;
const int kana_RI = 0x4d8;
const int kana_RU = 0x4d9;
const int kana_RE = 0x4da;
const int kana_RO = 0x4db;
const int kana_WA = 0x4dc;
const int kana_N = 0x4dd;
const int voicedsound = 0x4de;
const int semivoicedsound = 0x4df;
const int Farsi_0 = 0x590;
const int Farsi_1 = 0x591;
const int Farsi_2 = 0x592;
const int Farsi_3 = 0x593;
const int Farsi_4 = 0x594;
const int Farsi_5 = 0x595;
const int Farsi_6 = 0x596;
const int Farsi_7 = 0x597;
const int Farsi_8 = 0x598;
const int Farsi_9 = 0x599;
const int Arabic_percent = 0x5a5;
const int Arabic_superscript_alef = 0x5a6;
const int Arabic_tteh = 0x5a7;
const int Arabic_peh = 0x5a8;
const int Arabic_tcheh = 0x5a9;
const int Arabic_ddal = 0x5aa;
const int Arabic_rreh = 0x5ab;
const int Arabic_comma = 0x5ac;
const int Arabic_fullstop = 0x5ae;
const int Arabic_0 = 0x5b0;
const int Arabic_1 = 0x5b1;
const int Arabic_2 = 0x5b2;
const int Arabic_3 = 0x5b3;
const int Arabic_4 = 0x5b4;
const int Arabic_5 = 0x5b5;
const int Arabic_6 = 0x5b6;
const int Arabic_7 = 0x5b7;
const int Arabic_8 = 0x5b8;
const int Arabic_9 = 0x5b9;
const int Arabic_semicolon = 0x5bb;
const int Arabic_question_mark = 0x5bf;
const int Arabic_hamza = 0x5c1;
const int Arabic_maddaonalef = 0x5c2;
const int Arabic_hamzaonalef = 0x5c3;
const int Arabic_hamzaonwaw = 0x5c4;
const int Arabic_hamzaunderalef = 0x5c5;
const int Arabic_hamzaonyeh = 0x5c6;
const int Arabic_alef = 0x5c7;
const int Arabic_beh = 0x5c8;
const int Arabic_tehmarbuta = 0x5c9;
const int Arabic_teh = 0x5ca;
const int Arabic_theh = 0x5cb;
const int Arabic_jeem = 0x5cc;
const int Arabic_hah = 0x5cd;
const int Arabic_khah = 0x5ce;
const int Arabic_dal = 0x5cf;
const int Arabic_thal = 0x5d0;
const int Arabic_ra = 0x5d1;
const int Arabic_zain = 0x5d2;
const int Arabic_seen = 0x5d3;
const int Arabic_sheen = 0x5d4;
const int Arabic_sad = 0x5d5;
const int Arabic_dad = 0x5d6;
const int Arabic_tah = 0x5d7;
const int Arabic_zah = 0x5d8;
const int Arabic_ain = 0x5d9;
const int Arabic_ghain = 0x5da;
const int Arabic_tatweel = 0x5e0;
const int Arabic_feh = 0x5e1;
const int Arabic_qaf = 0x5e2;
const int Arabic_kaf = 0x5e3;
const int Arabic_lam = 0x5e4;
const int Arabic_meem = 0x5e5;
const int Arabic_noon = 0x5e6;
const int Arabic_ha = 0x5e7; // Arabic_heh is a deprecated synonym
const int Arabic_waw = 0x5e8;
const int Arabic_alefmaksura = 0x5e9;
const int Arabic_yeh = 0x5ea;
const int Arabic_fathatan = 0x5eb;
const int Arabic_dammatan = 0x5ec;
const int Arabic_kasratan = 0x5ed;
const int Arabic_fatha = 0x5ee;
const int Arabic_damma = 0x5ef;
const int Arabic_kasra = 0x5f0;
const int Arabic_shadda = 0x5f1;
const int Arabic_sukun = 0x5f2;
const int Arabic_madda_above = 0x5f3;
const int Arabic_hamza_above = 0x5f4;
const int Arabic_hamza_below = 0x5f5;
const int Arabic_jeh = 0x5f6;
const int Arabic_veh = 0x5f7;
const int Arabic_keheh = 0x5f8;
const int Arabic_gaf = 0x5f9;
const int Arabic_noon_ghunna = 0x5fa;
const int Arabic_heh_doachashmee = 0x5fb;
const int Farsi_yeh = 0x5fc; // Arabic_farsi_yeh is a synonym
const int Arabic_yeh_baree = 0x5fd;
const int Arabic_heh_goal = 0x5fe;
const int Cyrillic_GHE_bar = 0x680;
const int Cyrillic_ghe_bar = 0x690;
const int Cyrillic_ZHE_descender = 0x681;
const int Cyrillic_zhe_descender = 0x691;
const int Cyrillic_KA_descender = 0x682;
const int Cyrillic_ka_descender = 0x692;
const int Cyrillic_KA_vertstroke = 0x683;
const int Cyrillic_ka_vertstroke = 0x693;
const int Cyrillic_EN_descender = 0x684;
const int Cyrillic_en_descender = 0x694;
const int Cyrillic_U_straight = 0x685;
const int Cyrillic_u_straight = 0x695;
const int Cyrillic_U_straight_bar = 0x686;
const int Cyrillic_u_straight_bar = 0x696;
const int Cyrillic_HA_descender = 0x687;
const int Cyrillic_ha_descender = 0x697;
const int Cyrillic_CHE_descender = 0x688;
const int Cyrillic_che_descender = 0x698;
const int Cyrillic_CHE_vertstroke = 0x689;
const int Cyrillic_che_vertstroke = 0x699;
const int Cyrillic_SHHA = 0x68a;
const int Cyrillic_shha = 0x69a;
const int Cyrillic_SCHWA = 0x68c;
const int Cyrillic_schwa = 0x69c;
const int Cyrillic_I_macron = 0x68d;
const int Cyrillic_i_macron = 0x69d;
const int Cyrillic_O_bar = 0x68e;
const int Cyrillic_o_bar = 0x69e;
const int Cyrillic_U_macron = 0x68f;
const int Cyrillic_u_macron = 0x69f;
const int Serbian_dje = 0x6a1;
const int Macedonia_gje = 0x6a2;
const int Cyrillic_io = 0x6a3;
const int Ukrainian_ie = 0x6a4; // Ukranian_je is a deprecated synonym
const int Macedonia_dse = 0x6a5;
const int Ukrainian_i = 0x6a6;  // Ukranian_i is a deprecated synonym
const int Ukrainian_yi = 0x6a7; // Ukranian_yi is a deprecated synonym
const int Cyrillic_je = 0x6a8;  // Serbian_je is a deprecated synonym
const int Cyrillic_lje = 0x6a9; // Serbian_lje is a deprecated synonym
const int Cyrillic_nje = 0x6aa; // Serbian_nje is a deprecated synonym
const int Serbian_tshe = 0x6ab;
const int Macedonia_kje = 0x6ac;
const int Ukrainian_ghe_with_upturn = 0x6ad;
const int Byelorussian_shortu = 0x6ae;
const int Cyrillic_dzhe = 0x6af; // Serbian_dze is a deprecated synonym
const int numerosign = 0x6b0;
const int Serbian_DJE = 0x6b1;
const int Macedonia_GJE = 0x6b2;
const int Cyrillic_IO = 0x6b3;
const int Ukrainian_IE = 0x6b4; // Ukranian_JE is a deprecated synonym
const int Macedonia_DSE = 0x6b5;
const int Ukrainian_I = 0x6b6;  // Ukranian_I is a deprecated synonym
const int Ukrainian_YI = 0x6b7; // Ukranian_YI is a deprecated synonym
const int Cyrillic_JE = 0x6b8;  // Serbian_JE is a deprecated synonym
const int Cyrillic_LJE = 0x6b9; // Serbian_LJE is a deprecated synonym
const int Cyrillic_NJE = 0x6ba; // Serbian_NJE is a deprecated synonym
const int Serbian_TSHE = 0x6bb;
const int Macedonia_KJE = 0x6bc;
const int Ukrainian_GHE_WITH_UPTURN = 0x6bd;
const int Byelorussian_SHORTU = 0x6be;
const int Cyrillic_DZHE = 0x6bf;     // Serbian_DZE is a deprecated synonym
const int Cyrillic_yu = 0x6c0;       //ю
const int Cyrillic_a = 0x6c1;        //а
const int Cyrillic_be = 0x6c2;       //б
const int Cyrillic_tse = 0x6c3;      //ц
const int Cyrillic_de = 0x6c4;       //д
const int Cyrillic_ie = 0x6c5;       //е
const int Cyrillic_ef = 0x6c6;       //ф
const int Cyrillic_ghe = 0x6c7;      //г
const int Cyrillic_ha = 0x6c8;       //х
const int Cyrillic_i = 0x6c9;        //и
const int Cyrillic_shorti = 0x6ca;   //й
const int Cyrillic_ka = 0x6cb;       //к
const int Cyrillic_el = 0x6cc;       //л
const int Cyrillic_em = 0x6cd;       //м
const int Cyrillic_en = 0x6ce;       //н
const int Cyrillic_o = 0x6cf;        //о
const int Cyrillic_pe = 0x6d0;       //п
const int Cyrillic_ya = 0x6d1;       //я
const int Cyrillic_er = 0x6d2;       //р
const int Cyrillic_es = 0x6d3;       //с
const int Cyrillic_te = 0x6d4;       //т
const int Cyrillic_u = 0x6d5;        //у
const int Cyrillic_zhe = 0x6d6;      //ж
const int Cyrillic_ve = 0x6d7;       //в
const int Cyrillic_softsign = 0x6d8; //ь
const int Cyrillic_yeru = 0x6d9;     //ы
const int Cyrillic_ze = 0x6da;       //з
const int Cyrillic_sha = 0x6db;      //ш
const int Cyrillic_e = 0x6dc;        //э
const int Cyrillic_shcha = 0x6dd;    //щ
const int Cyrillic_che = 0x6de;      //ч
const int Cyrillic_hardsign = 0x6df; //ъ
const int Cyrillic_YU = 0x6e0;       //Ю
const int Cyrillic_A = 0x6e1;        //А
const int Cyrillic_BE = 0x6e2;       //Б
const int Cyrillic_TSE = 0x6e3;      //Ц
const int Cyrillic_DE = 0x6e4;       //Д
const int Cyrillic_IE = 0x6e5;       //Е
const int Cyrillic_EF = 0x6e6;       //Ф
const int Cyrillic_GHE = 0x6e7;      //Г
const int Cyrillic_HA = 0x6e8;       //Х
const int Cyrillic_I = 0x6e9;        //И
const int Cyrillic_SHORTI = 0x6ea;   //Й
const int Cyrillic_KA = 0x6eb;       //К
const int Cyrillic_EL = 0x6ec;       //Л
const int Cyrillic_EM = 0x6ed;       //М
const int Cyrillic_EN = 0x6ee;       //Н
const int Cyrillic_O = 0x6ef;        //О
const int Cyrillic_PE = 0x6f0;       //П
const int Cyrillic_YA = 0x6f1;       //Я
const int Cyrillic_ER = 0x6f2;       //Р
const int Cyrillic_ES = 0x6f3;       //С
const int Cyrillic_TE = 0x6f4;       //Т
const int Cyrillic_U = 0x6f5;        //У
const int Cyrillic_ZHE = 0x6f6;      //Ж
const int Cyrillic_VE = 0x6f7;       //В
const int Cyrillic_SOFTSIGN = 0x6f8; //Ь
const int Cyrillic_YERU = 0x6f9;     //Ы
const int Cyrillic_ZE = 0x6fa;       //З
const int Cyrillic_SHA = 0x6fb;      //Ш
const int Cyrillic_E = 0x6fc;        //Э
const int Cyrillic_SHCHA = 0x6fd;    //Щ
const int Cyrillic_CHE = 0x6fe;      //Ч
const int Cyrillic_HARDSIGN = 0x6ff; //Ъ
const int Greek_ALPHAaccent = 0x7a1;
const int Greek_EPSILONaccent = 0x7a2;
const int Greek_ETAaccent = 0x7a3;
const int Greek_IOTAaccent = 0x7a4;
const int Greek_IOTAdieresis
    = 0x7a5; // Greek_IOTAdiaeresis is a synonym thanks to a typo
const int Greek_OMICRONaccent = 0x7a7;
const int Greek_UPSILONaccent = 0x7a8;
const int Greek_UPSILONdieresis = 0x7a9;
const int Greek_OMEGAaccent = 0x7ab;
const int Greek_accentdieresis = 0x7ae;
const int Greek_horizbar = 0x7af;
const int Greek_alphaaccent = 0x7b1;
const int Greek_epsilonaccent = 0x7b2;
const int Greek_etaaccent = 0x7b3;
const int Greek_iotaaccent = 0x7b4;
const int Greek_iotadieresis = 0x7b5;
const int Greek_iotaaccentdieresis = 0x7b6;
const int Greek_omicronaccent = 0x7b7;
const int Greek_upsilonaccent = 0x7b8;
const int Greek_upsilondieresis = 0x7b9;
const int Greek_upsilonaccentdieresis = 0x7ba;
const int Greek_omegaaccent = 0x7bb;
const int Greek_ALPHA = 0x7c1;
const int Greek_BETA = 0x7c2;
const int Greek_GAMMA = 0x7c3;
const int Greek_DELTA = 0x7c4;
const int Greek_EPSILON = 0x7c5;
const int Greek_ZETA = 0x7c6;
const int Greek_ETA = 0x7c7;
const int Greek_THETA = 0x7c8;
const int Greek_IOTA = 0x7c9;
const int Greek_KAPPA = 0x7ca;
const int Greek_LAMDA = 0x7cb; // Greek_LAMBDA is a deprecated synonym
const int Greek_MU = 0x7cc;
const int Greek_NU = 0x7cd;
const int Greek_XI = 0x7ce;
const int Greek_OMICRON = 0x7cf;
const int Greek_PI = 0x7d0;
const int Greek_RHO = 0x7d1;
const int Greek_SIGMA = 0x7d2;
const int Greek_TAU = 0x7d4;
const int Greek_UPSILON = 0x7d5;
const int Greek_PHI = 0x7d6;
const int Greek_CHI = 0x7d7;
const int Greek_PSI = 0x7d8;
const int Greek_OMEGA = 0x7d9;
const int Greek_alpha = 0x7e1;
const int Greek_beta = 0x7e2;
const int Greek_gamma = 0x7e3;
const int Greek_delta = 0x7e4;
const int Greek_epsilon = 0x7e5;
const int Greek_zeta = 0x7e6;
const int Greek_eta = 0x7e7;
const int Greek_theta = 0x7e8;
const int Greek_iota = 0x7e9;
const int Greek_kappa = 0x7ea;
const int Greek_lamda = 0x7eb; // Greek_lambda is a deprecated synonym
const int Greek_mu = 0x7ec;
const int Greek_nu = 0x7ed;
const int Greek_xi = 0x7ee;
const int Greek_omicron = 0x7ef;
const int Greek_pi = 0x7f0;
const int Greek_rho = 0x7f1;
const int Greek_sigma = 0x7f2;
const int Greek_finalsmallsigma = 0x7f3;
const int Greek_tau = 0x7f4;
const int Greek_upsilon = 0x7f5;
const int Greek_phi = 0x7f6;
const int Greek_chi = 0x7f7;
const int Greek_psi = 0x7f8;
const int Greek_omega = 0x7f9;
const int leftradical = 0x8a1;
const int topleftradical = 0x8a2;
const int horizconnector = 0x8a3;
const int topintegral = 0x8a4;
const int botintegral = 0x8a5;
const int vertconnector = 0x8a6;
const int topleftsqbracket = 0x8a7;
const int botleftsqbracket = 0x8a8;
const int toprightsqbracket = 0x8a9;
const int botrightsqbracket = 0x8aa;
const int topleftparens = 0x8ab;
const int botleftparens = 0x8ac;
const int toprightparens = 0x8ad;
const int botrightparens = 0x8ae;
const int leftmiddlecurlybrace = 0x8af;
const int rightmiddlecurlybrace = 0x8b0;
const int topleftsummation = 0x8b1;
const int botleftsummation = 0x8b2;
const int topvertsummationconnector = 0x8b3;
const int botvertsummationconnector = 0x8b4;
const int toprightsummation = 0x8b5;
const int botrightsummation = 0x8b6;
const int rightmiddlesummation = 0x8b7;
const int lessthanequal = 0x8bc;
const int notequal = 0x8bd;
const int greaterthanequal = 0x8be;
const int integral = 0x8bf;
const int therefore = 0x8c0;
const int variation = 0x8c1;
const int infinity = 0x8c2;
const int nabla = 0x8c5;
const int approximate = 0x8c8;
const int similarequal = 0x8c9;
const int ifonlyif = 0x8cd;
const int implies = 0x8ce;
const int identical = 0x8cf;
const int radical = 0x8d6;
const int includedin = 0x8da;
const int includes = 0x8db;
const int intersection = 0x8dc;
const int Union = 0x8dd;
const int logicaland = 0x8de;
const int logicalor = 0x8df;
const int partialderivative = 0x8ef;
const int function = 0x8f6;
const int leftarrow = 0x8fb;
const int uparrow = 0x8fc;
const int rightarrow = 0x8fd;
const int downarrow = 0x8fe;
const int blank = 0x9df;
const int soliddiamond = 0x9e0;
const int checkerboard = 0x9e1;
const int ht = 0x9e2;
const int ff = 0x9e3;
const int cr = 0x9e4;
const int lf = 0x9e5;
const int nl = 0x9e8;
const int vt = 0x9e9;
const int lowrightcorner = 0x9ea;
const int uprightcorner = 0x9eb;
const int upleftcorner = 0x9ec;
const int lowleftcorner = 0x9ed;
const int crossinglines = 0x9ee;
const int horizlinescan1 = 0x9ef;
const int horizlinescan3 = 0x9f0;
const int horizlinescan5 = 0x9f1;
const int horizlinescan7 = 0x9f2;
const int horizlinescan9 = 0x9f3;
const int leftt = 0x9f4;
const int rightt = 0x9f5;
const int bott = 0x9f6;
const int topt = 0x9f7;
const int vertbar = 0x9f8;
const int emspace = 0xaa1;
const int enspace = 0xaa2;
const int em3space = 0xaa3;
const int em4space = 0xaa4;
const int digitspace = 0xaa5;
const int punctspace = 0xaa6;
const int thinspace = 0xaa7;
const int hairspace = 0xaa8;
const int emdash = 0xaa9;
const int endash = 0xaaa;
const int signifblank = 0xaac;
const int ellipsis = 0xaae;
const int doubbaselinedot = 0xaaf;
const int onethird = 0xab0;
const int twothirds = 0xab1;
const int onefifth = 0xab2;
const int twofifths = 0xab3;
const int threefifths = 0xab4;
const int fourfifths = 0xab5;
const int onesixth = 0xab6;
const int fivesixths = 0xab7;
const int careof = 0xab8;
const int figdash = 0xabb;
const int leftanglebracket = 0xabc;
const int decimalpoint = 0xabd;
const int rightanglebracket = 0xabe;
const int marker = 0xabf;
const int oneeighth = 0xac3;
const int threeeighths = 0xac4;
const int fiveeighths = 0xac5;
const int seveneighths = 0xac6;
const int trademark = 0xac9;
const int signaturemark = 0xaca;
const int trademarkincircle = 0xacb;
const int leftopentriangle = 0xacc;
const int rightopentriangle = 0xacd;
const int emopencircle = 0xace;
const int emopenrectangle = 0xacf;
const int leftsinglequotemark = 0xad0;
const int rightsinglequotemark = 0xad1;
const int leftdoublequotemark = 0xad2;
const int rightdoublequotemark = 0xad3;
const int prescription = 0xad4;
const int minutes = 0xad6;
const int seconds = 0xad7;
const int latincross = 0xad9;
const int hexagram = 0xada;
const int filledrectbullet = 0xadb;
const int filledlefttribullet = 0xadc;
const int filledrighttribullet = 0xadd;
const int emfilledcircle = 0xade;
const int emfilledrect = 0xadf;
const int enopencircbullet = 0xae0;
const int enopensquarebullet = 0xae1;
const int openrectbullet = 0xae2;
const int opentribulletup = 0xae3;
const int opentribulletdown = 0xae4;
const int openstar = 0xae5;
const int enfilledcircbullet = 0xae6;
const int enfilledsqbullet = 0xae7;
const int filledtribulletup = 0xae8;
const int filledtribulletdown = 0xae9;
const int leftpointer = 0xaea;
const int rightpointer = 0xaeb;
const int club = 0xaec;
const int diamond = 0xaed;
const int heart = 0xaee;
const int maltesecross = 0xaf0;
const int dagger = 0xaf1;
const int doubledagger = 0xaf2;
const int checkmark = 0xaf3;
const int ballotcross = 0xaf4;
const int musicalsharp = 0xaf5;
const int musicalflat = 0xaf6;
const int malesymbol = 0xaf7;
const int femalesymbol = 0xaf8;
const int telephone = 0xaf9;
const int telephonerecorder = 0xafa;
const int phonographcopyright = 0xafb;
const int caret = 0xafc;
const int singlelowquotemark = 0xafd;
const int doublelowquotemark = 0xafe;
const int cursor = 0xaff;
const int leftcaret = 0xba3;
const int rightcaret = 0xba6;
const int downcaret = 0xba8;
const int upcaret = 0xba9;
const int overbar = 0xbc0;
const int downtack = 0xbc2;
const int upshoe = 0xbc3;
const int downstile = 0xbc4;
const int underbar = 0xbc6;
const int jot = 0xbca;
const int quad = 0xbcc;
const int uptack = 0xbce;
const int circle = 0xbcf;
const int upstile = 0xbd3;
const int downshoe = 0xbd6;
const int rightshoe = 0xbd8;
const int leftshoe = 0xbda;
const int lefttack = 0xbdc;
const int righttack = 0xbfc;
const int hebrew_doublelowline = 0xcdf;
const int hebrew_aleph = 0xce0;
const int hebrew_bet = 0xce1;   // hebrew_beth is a deprecated synonym
const int hebrew_gimel = 0xce2; // hebrew_gimmel is a deprecated synonym
const int hebrew_dalet = 0xce3; // hebrew_daleth is a deprecated synonym
const int hebrew_he = 0xce4;
const int hebrew_waw = 0xce5;
const int hebrew_zain = 0xce6; // hebrew_zayin is a deprecated synonym
const int hebrew_chet = 0xce7; // hebrew_het is a deprecated synonym
const int hebrew_tet = 0xce8;  // hebrew_teth is a deprecated synonym
const int hebrew_yod = 0xce9;
const int hebrew_finalkaph = 0xcea;
const int hebrew_kaph = 0xceb;
const int hebrew_lamed = 0xcec;
const int hebrew_finalmem = 0xced;
const int hebrew_mem = 0xcee;
const int hebrew_finalnun = 0xcef;
const int hebrew_nun = 0xcf0;
const int hebrew_samech = 0xcf1; // hebrew_samekh is a deprecated synonym
const int hebrew_ayin = 0xcf2;
const int hebrew_finalpe = 0xcf3;
const int hebrew_pe = 0xcf4;
const int hebrew_finalzade = 0xcf5; // hebrew_finalzadi is a deprecated synonym
const int hebrew_zade = 0xcf6;      // hebrew_zadi is a deprecated synonym
const int hebrew_qoph = 0xcf7;      // hebrew_kuf is a deprecated synonym
const int hebrew_resh = 0xcf8;
const int hebrew_shin = 0xcf9;
const int hebrew_taw = 0xcfa; // hebrew_taf is a deprecated synonym
const int Thai_kokai = 0xda1;
const int Thai_khokhai = 0xda2;
const int Thai_khokhuat = 0xda3;
const int Thai_khokhwai = 0xda4;
const int Thai_khokhon = 0xda5;
const int Thai_khorakhang = 0xda6;
const int Thai_ngongu = 0xda7;
const int Thai_chochan = 0xda8;
const int Thai_choching = 0xda9;
const int Thai_chochang = 0xdaa;
const int Thai_soso = 0xdab;
const int Thai_chochoe = 0xdac;
const int Thai_yoying = 0xdad;
const int Thai_dochada = 0xdae;
const int Thai_topatak = 0xdaf;
const int Thai_thothan = 0xdb0;
const int Thai_thonangmontho = 0xdb1;
const int Thai_thophuthao = 0xdb2;
const int Thai_nonen = 0xdb3;
const int Thai_dodek = 0xdb4;
const int Thai_totao = 0xdb5;
const int Thai_thothung = 0xdb6;
const int Thai_thothahan = 0xdb7;
const int Thai_thothong = 0xdb8;
const int Thai_nonu = 0xdb9;
const int Thai_bobaimai = 0xdba;
const int Thai_popla = 0xdbb;
const int Thai_phophung = 0xdbc;
const int Thai_fofa = 0xdbd;
const int Thai_phophan = 0xdbe;
const int Thai_fofan = 0xdbf;
const int Thai_phosamphao = 0xdc0;
const int Thai_moma = 0xdc1;
const int Thai_yoyak = 0xdc2;
const int Thai_rorua = 0xdc3;
const int Thai_ru = 0xdc4;
const int Thai_loling = 0xdc5;
const int Thai_lu = 0xdc6;
const int Thai_wowaen = 0xdc7;
const int Thai_sosala = 0xdc8;
const int Thai_sorusi = 0xdc9;
const int Thai_sosua = 0xdca;
const int Thai_hohip = 0xdcb;
const int Thai_lochula = 0xdcc;
const int Thai_oang = 0xdcd;
const int Thai_honokhuk = 0xdce;
const int Thai_paiyannoi = 0xdcf;
const int Thai_saraa = 0xdd0;
const int Thai_maihanakat = 0xdd1;
const int Thai_saraaa = 0xdd2;
const int Thai_saraam = 0xdd3;
const int Thai_sarai = 0xdd4;
const int Thai_saraii = 0xdd5;
const int Thai_saraue = 0xdd6;
const int Thai_sarauee = 0xdd7;
const int Thai_sarau = 0xdd8;
const int Thai_sarauu = 0xdd9;
const int Thai_phinthu = 0xdda;
const int Thai_maihanakat_maitho = 0xdde;
const int Thai_baht = 0xddf;
const int Thai_sarae = 0xde0;
const int Thai_saraae = 0xde1;
const int Thai_sarao = 0xde2;
const int Thai_saraaimaimuan = 0xde3;
const int Thai_saraaimaimalai = 0xde4;
const int Thai_lakkhangyao = 0xde5;
const int Thai_maiyamok = 0xde6;
const int Thai_maitaikhu = 0xde7;
const int Thai_maiek = 0xde8;
const int Thai_maitho = 0xde9;
const int Thai_maitri = 0xdea;
const int Thai_maichattawa = 0xdeb;
const int Thai_thanthakhat = 0xdec;
const int Thai_nikhahit = 0xded;
const int Thai_leksun = 0xdf0;
const int Thai_leknung = 0xdf1;
const int Thai_leksong = 0xdf2;
const int Thai_leksam = 0xdf3;
const int Thai_leksi = 0xdf4;
const int Thai_lekha = 0xdf5;
const int Thai_lekhok = 0xdf6;
const int Thai_lekchet = 0xdf7;
const int Thai_lekpaet = 0xdf8;
const int Thai_lekkao = 0xdf9;
const int Hangul = 0xff31;                   // Hangul start/stop(toggle)
const int Hangul_Start = 0xff32;             // Hangul start
const int Hangul_End = 0xff33;               // Hangul end, English start
const int Hangul_Hanja = 0xff34;             // Start Hangul->Hanja Conversion
const int Hangul_Jamo = 0xff35;              // Hangul Jamo mode
const int Hangul_Romaja = 0xff36;            // Hangul Romaja mode
const int Hangul_Codeinput = 0xff37;         // Hangul code input mode
const int Hangul_Jeonja = 0xff38;            // Jeonja mode
const int Hangul_Banja = 0xff39;             // Banja mode
const int Hangul_PreHanja = 0xff3a;          // Pre Hanja conversion
const int Hangul_PostHanja = 0xff3b;         // Post Hanja conversion
const int Hangul_SingleCandidate = 0xff3c;   // Single candidate
const int Hangul_MultipleCandidate = 0xff3d; // Multiple candidate
const int Hangul_PreviousCandidate = 0xff3e; // Previous candidate
const int Hangul_Special = 0xff3f;           // Special symbols
const int Hangul_Kiyeog = 0xea1;
const int Hangul_SsangKiyeog = 0xea2;
const int Hangul_KiyeogSios = 0xea3;
const int Hangul_Nieun = 0xea4;
const int Hangul_NieunJieuj = 0xea5;
const int Hangul_NieunHieuh = 0xea6;
const int Hangul_Dikeud = 0xea7;
const int Hangul_SsangDikeud = 0xea8;
const int Hangul_Rieul = 0xea9;
const int Hangul_RieulKiyeog = 0xeaa;
const int Hangul_RieulMieum = 0xeab;
const int Hangul_RieulPieub = 0xeac;
const int Hangul_RieulSios = 0xead;
const int Hangul_RieulTieut = 0xeae;
const int Hangul_RieulPhieuf = 0xeaf;
const int Hangul_RieulHieuh = 0xeb0;
const int Hangul_Mieum = 0xeb1;
const int Hangul_Pieub = 0xeb2;
const int Hangul_SsangPieub = 0xeb3;
const int Hangul_PieubSios = 0xeb4;
const int Hangul_Sios = 0xeb5;
const int Hangul_SsangSios = 0xeb6;
const int Hangul_Ieung = 0xeb7;
const int Hangul_Jieuj = 0xeb8;
const int Hangul_SsangJieuj = 0xeb9;
const int Hangul_Cieuc = 0xeba;
const int Hangul_Khieuq = 0xebb;
const int Hangul_Tieut = 0xebc;
const int Hangul_Phieuf = 0xebd;
const int Hangul_Hieuh = 0xebe;
const int Hangul_A = 0xebf;
const int Hangul_AE = 0xec0;
const int Hangul_YA = 0xec1;
const int Hangul_YAE = 0xec2;
const int Hangul_EO = 0xec3;
const int Hangul_E = 0xec4;
const int Hangul_YEO = 0xec5;
const int Hangul_YE = 0xec6;
const int Hangul_O = 0xec7;
const int Hangul_WA = 0xec8;
const int Hangul_WAE = 0xec9;
const int Hangul_OE = 0xeca;
const int Hangul_YO = 0xecb;
const int Hangul_U = 0xecc;
const int Hangul_WEO = 0xecd;
const int Hangul_WE = 0xece;
const int Hangul_WI = 0xecf;
const int Hangul_YU = 0xed0;
const int Hangul_EU = 0xed1;
const int Hangul_YI = 0xed2;
const int Hangul_I = 0xed3;
const int Hangul_J_Kiyeog = 0xed4;
const int Hangul_J_SsangKiyeog = 0xed5;
const int Hangul_J_KiyeogSios = 0xed6;
const int Hangul_J_Nieun = 0xed7;
const int Hangul_J_NieunJieuj = 0xed8;
const int Hangul_J_NieunHieuh = 0xed9;
const int Hangul_J_Dikeud = 0xeda;
const int Hangul_J_Rieul = 0xedb;
const int Hangul_J_RieulKiyeog = 0xedc;
const int Hangul_J_RieulMieum = 0xedd;
const int Hangul_J_RieulPieub = 0xede;
const int Hangul_J_RieulSios = 0xedf;
const int Hangul_J_RieulTieut = 0xee0;
const int Hangul_J_RieulPhieuf = 0xee1;
const int Hangul_J_RieulHieuh = 0xee2;
const int Hangul_J_Mieum = 0xee3;
const int Hangul_J_Pieub = 0xee4;
const int Hangul_J_PieubSios = 0xee5;
const int Hangul_J_Sios = 0xee6;
const int Hangul_J_SsangSios = 0xee7;
const int Hangul_J_Ieung = 0xee8;
const int Hangul_J_Jieuj = 0xee9;
const int Hangul_J_Cieuc = 0xeea;
const int Hangul_J_Khieuq = 0xeeb;
const int Hangul_J_Tieut = 0xeec;
const int Hangul_J_Phieuf = 0xeed;
const int Hangul_J_Hieuh = 0xeee;
const int Hangul_RieulYeorinHieuh = 0xeef;
const int Hangul_SunkyeongeumMieum = 0xef0;
const int Hangul_SunkyeongeumPieub = 0xef1;
const int Hangul_PanSios = 0xef2;
const int Hangul_KkogjiDalrinIeung = 0xef3;
const int Hangul_SunkyeongeumPhieuf = 0xef4;
const int Hangul_YeorinHieuh = 0xef5;
const int Hangul_AraeA = 0xef6;
const int Hangul_AraeAE = 0xef7;
const int Hangul_J_PanSios = 0xef8;
const int Hangul_J_KkogjiDalrinIeung = 0xef9;
const int Hangul_J_YeorinHieuh = 0xefa;
const int Korean_Won = 0xeff;
const int Armenian_eternity = 0x14a1;
const int Armenian_ligature_ew = 0x14a2;
const int Armenian_full_stop
    = 0x14a3; // Armenian_verjaket is a deprecated synonym
const int Armenian_parenright = 0x14a4;
const int Armenian_parenleft = 0x14a5;
const int Armenian_guillemotright = 0x14a6;
const int Armenian_guillemotleft = 0x14a7;
const int Armenian_em_dash = 0x14a8;
const int Armenian_dot = 0x14a9; // Armenian_mijaket is a deprecated synonym
const int Armenian_separation_mark
    = 0x14aa; // Armenian_but is a deprecated synonym
const int Armenian_comma = 0x14ab;
const int Armenian_en_dash = 0x14ac;
const int Armenian_hyphen = 0x14ad; // Armenian_yentamna is a deprecated synonym
const int Armenian_ellipsis = 0x14ae;
const int Armenian_exclam = 0x14af;   // Armenian_amanak is a deprecated synonym
const int Armenian_accent = 0x14b0;   // Armenian_shesht is a deprecated synonym
const int Armenian_question = 0x14b1; // Armenian_paruyk is a deprecated synonym
const int Armenian_AYB = 0x14b2;
const int Armenian_ayb = 0x14b3;
const int Armenian_BEN = 0x14b4;
const int Armenian_ben = 0x14b5;
const int Armenian_GIM = 0x14b6;
const int Armenian_gim = 0x14b7;
const int Armenian_DA = 0x14b8;
const int Armenian_da = 0x14b9;
const int Armenian_YECH = 0x14ba;
const int Armenian_yech = 0x14bb;
const int Armenian_ZA = 0x14bc;
const int Armenian_za = 0x14bd;
const int Armenian_E = 0x14be;
const int Armenian_e = 0x14bf;
const int Armenian_AT = 0x14c0;
const int Armenian_at = 0x14c1;
const int Armenian_TO = 0x14c2;
const int Armenian_to = 0x14c3;
const int Armenian_ZHE = 0x14c4;
const int Armenian_zhe = 0x14c5;
const int Armenian_INI = 0x14c6;
const int Armenian_ini = 0x14c7;
const int Armenian_LYUN = 0x14c8;
const int Armenian_lyun = 0x14c9;
const int Armenian_KHE = 0x14ca;
const int Armenian_khe = 0x14cb;
const int Armenian_TSA = 0x14cc;
const int Armenian_tsa = 0x14cd;
const int Armenian_KEN = 0x14ce;
const int Armenian_ken = 0x14cf;
const int Armenian_HO = 0x14d0;
const int Armenian_ho = 0x14d1;
const int Armenian_DZA = 0x14d2;
const int Armenian_dza = 0x14d3;
const int Armenian_GHAT = 0x14d4;
const int Armenian_ghat = 0x14d5;
const int Armenian_TCHE = 0x14d6;
const int Armenian_tche = 0x14d7;
const int Armenian_MEN = 0x14d8;
const int Armenian_men = 0x14d9;
const int Armenian_HI = 0x14da;
const int Armenian_hi = 0x14db;
const int Armenian_NU = 0x14dc;
const int Armenian_nu = 0x14dd;
const int Armenian_SHA = 0x14de;
const int Armenian_sha = 0x14df;
const int Armenian_VO = 0x14e0;
const int Armenian_vo = 0x14e1;
const int Armenian_CHA = 0x14e2;
const int Armenian_cha = 0x14e3;
const int Armenian_PE = 0x14e4;
const int Armenian_pe = 0x14e5;
const int Armenian_JE = 0x14e6;
const int Armenian_je = 0x14e7;
const int Armenian_RA = 0x14e8;
const int Armenian_ra = 0x14e9;
const int Armenian_SE = 0x14ea;
const int Armenian_se = 0x14eb;
const int Armenian_VEV = 0x14ec;
const int Armenian_vev = 0x14ed;
const int Armenian_TYUN = 0x14ee;
const int Armenian_tyun = 0x14ef;
const int Armenian_RE = 0x14f0;
const int Armenian_re = 0x14f1;
const int Armenian_TSO = 0x14f2;
const int Armenian_tso = 0x14f3;
const int Armenian_VYUN = 0x14f4;
const int Armenian_vyun = 0x14f5;
const int Armenian_PYUR = 0x14f6;
const int Armenian_pyur = 0x14f7;
const int Armenian_KE = 0x14f8;
const int Armenian_ke = 0x14f9;
const int Armenian_O = 0x14fa;
const int Armenian_o = 0x14fb;
const int Armenian_FE = 0x14fc;
const int Armenian_fe = 0x14fd;
const int Armenian_apostrophe = 0x14fe;
const int Armenian_section_sign = 0x14ff;
const int Georgian_an = 0x15d0;
const int Georgian_ban = 0x15d1;
const int Georgian_gan = 0x15d2;
const int Georgian_don = 0x15d3;
const int Georgian_en = 0x15d4;
const int Georgian_vin = 0x15d5;
const int Georgian_zen = 0x15d6;
const int Georgian_tan = 0x15d7;
const int Georgian_in = 0x15d8;
const int Georgian_kan = 0x15d9;
const int Georgian_las = 0x15da;
const int Georgian_man = 0x15db;
const int Georgian_nar = 0x15dc;
const int Georgian_on = 0x15dd;
const int Georgian_par = 0x15de;
const int Georgian_zhar = 0x15df;
const int Georgian_rae = 0x15e0;
const int Georgian_san = 0x15e1;
const int Georgian_tar = 0x15e2;
const int Georgian_un = 0x15e3;
const int Georgian_phar = 0x15e4;
const int Georgian_khar = 0x15e5;
const int Georgian_ghan = 0x15e6;
const int Georgian_qar = 0x15e7;
const int Georgian_shin = 0x15e8;
const int Georgian_chin = 0x15e9;
const int Georgian_can = 0x15ea;
const int Georgian_jil = 0x15eb;
const int Georgian_cil = 0x15ec;
const int Georgian_char = 0x15ed;
const int Georgian_xan = 0x15ee;
const int Georgian_jhan = 0x15ef;
const int Georgian_hae = 0x15f0;
const int Georgian_he = 0x15f1;
const int Georgian_hie = 0x15f2;
const int Georgian_we = 0x15f3;
const int Georgian_har = 0x15f4;
const int Georgian_hoe = 0x15f5;
const int Georgian_fi = 0x15f6;
const int Ccedillaabovedot = 0x16a2;
const int Xabovedot = 0x16a3;
const int Qabovedot = 0x16a5;
const int IE = 0x16a7;
const int UO = 0x16a8;
const int Zstroke = 0x16a9;
const int ccedillaabovedot = 0x16b2;
const int xabovedot = 0x16b3;
const int qabovedot = 0x16b5;
const int ie = 0x16b7;
const int uo = 0x16b8;
const int zstroke = 0x16b9;
const int SCHWA = 0x16c6;
const int schwa = 0x16f6;
const int Lbelowdot = 0x16d1;
const int Lstrokebelowdot = 0x16d2;
const int lbelowdot = 0x16e1;
const int lstrokebelowdot = 0x16e2;
const int Gtilde = 0x16d3;
const int gtilde = 0x16e3;
const int Abelowdot = 0x1ea0;
const int abelowdot = 0x1ea1;
const int Ahook = 0x1ea2;
const int ahook = 0x1ea3;
const int Acircumflexacute = 0x1ea4;
const int acircumflexacute = 0x1ea5;
const int Acircumflexgrave = 0x1ea6;
const int acircumflexgrave = 0x1ea7;
const int Acircumflexhook = 0x1ea8;
const int acircumflexhook = 0x1ea9;
const int Acircumflextilde = 0x1eaa;
const int acircumflextilde = 0x1eab;
const int Acircumflexbelowdot = 0x1eac;
const int acircumflexbelowdot = 0x1ead;
const int Abreveacute = 0x1eae;
const int abreveacute = 0x1eaf;
const int Abrevegrave = 0x1eb0;
const int abrevegrave = 0x1eb1;
const int Abrevehook = 0x1eb2;
const int abrevehook = 0x1eb3;
const int Abrevetilde = 0x1eb4;
const int abrevetilde = 0x1eb5;
const int Abrevebelowdot = 0x1eb6;
const int abrevebelowdot = 0x1eb7;
const int Ebelowdot = 0x1eb8;
const int ebelowdot = 0x1eb9;
const int Ehook = 0x1eba;
const int ehook = 0x1ebb;
const int Etilde = 0x1ebc;
const int etilde = 0x1ebd;
const int Ecircumflexacute = 0x1ebe;
const int ecircumflexacute = 0x1ebf;
const int Ecircumflexgrave = 0x1ec0;
const int ecircumflexgrave = 0x1ec1;
const int Ecircumflexhook = 0x1ec2;
const int ecircumflexhook = 0x1ec3;
const int Ecircumflextilde = 0x1ec4;
const int ecircumflextilde = 0x1ec5;
const int Ecircumflexbelowdot = 0x1ec6;
const int ecircumflexbelowdot = 0x1ec7;
const int Ihook = 0x1ec8;
const int ihook = 0x1ec9;
const int Ibelowdot = 0x1eca;
const int ibelowdot = 0x1ecb;
const int Obelowdot = 0x1ecc;
const int obelowdot = 0x1ecd;
const int Ohook = 0x1ece;
const int ohook = 0x1ecf;
const int Ocircumflexacute = 0x1ed0;
const int ocircumflexacute = 0x1ed1;
const int Ocircumflexgrave = 0x1ed2;
const int ocircumflexgrave = 0x1ed3;
const int Ocircumflexhook = 0x1ed4;
const int ocircumflexhook = 0x1ed5;
const int Ocircumflextilde = 0x1ed6;
const int ocircumflextilde = 0x1ed7;
const int Ocircumflexbelowdot = 0x1ed8;
const int ocircumflexbelowdot = 0x1ed9;
const int Ohornacute = 0x1eda;
const int ohornacute = 0x1edb;
const int Ohorngrave = 0x1edc;
const int ohorngrave = 0x1edd;
const int Ohornhook = 0x1ede;
const int ohornhook = 0x1edf;
const int Ohorntilde = 0x1ee0;
const int ohorntilde = 0x1ee1;
const int Ohornbelowdot = 0x1ee2;
const int ohornbelowdot = 0x1ee3;
const int Ubelowdot = 0x1ee4;
const int ubelowdot = 0x1ee5;
const int Uhook = 0x1ee6;
const int uhook = 0x1ee7;
const int Uhornacute = 0x1ee8;
const int uhornacute = 0x1ee9;
const int Uhorngrave = 0x1eea;
const int uhorngrave = 0x1eeb;
const int Uhornhook = 0x1eec;
const int uhornhook = 0x1eed;
const int Uhorntilde = 0x1eee;
const int uhorntilde = 0x1eef;
const int Uhornbelowdot = 0x1ef0;
const int uhornbelowdot = 0x1ef1;
const int Ybelowdot = 0x1ef4;
const int ybelowdot = 0x1ef5;
const int Yhook = 0x1ef6;
const int yhook = 0x1ef7;
const int Ytilde = 0x1ef8;
const int ytilde = 0x1ef9;
const int Ohorn = 0x1efa;              // U+01a0
const int ohorn = 0x1efb;              // U+01a1
const int Uhorn = 0x1efc;              // U+01af
const int uhorn = 0x1efd;              // U+01b0
const int combining_tilde = 0x1e9f;    // U+0303
const int combining_grave = 0x1ef2;    // U+0300
const int combining_acute = 0x1ef3;    // U+0301
const int combining_hook = 0x1efe;     // U+0309
const int combining_belowdot = 0x1eff; // U+0323
const int EcuSign = 0x20a0;
const int ColonSign = 0x20a1;
const int CruzeiroSign = 0x20a2;
const int FFrancSign = 0x20a3;
const int LiraSign = 0x20a4;
const int MillSign = 0x20a5;
const int NairaSign = 0x20a6;
const int PesetaSign = 0x20a7;
const int RupeeSign = 0x20a8;
const int WonSign = 0x20a9;
const int NewSheqelSign = 0x20aa;
const int DongSign = 0x20ab;
const int EuroSign = 0x20ac; 
